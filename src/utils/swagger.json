{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Repository API",
    "description": "Documentation Repository API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3333",
  "basePath": "/",
  "tags": [
    {
      "name": "Repositories",
      "description": "Operations about Repositories"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/repositories": {
      "post": {
        "tags": [
          "Repositories"
        ],
        "description": "Creates a new repository with given input array",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Repository that we want to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Repository"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The repository has been created",
            "schema": {
              "$ref": "#/definitions/RepositorySucess"
            }
          },
          "400": {
            "description": "Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Invalid parameters",
                  "code": "400",
                  "error": "Bad Request"
                }
              }
            }
          }
        }
      },
      "/users": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get all users in system",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Users"
              }
            }
          }
        }
      },
      "/user/{id}": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of user that we want to find",
            "type": "integer"
          }
        ],
        "delete": {
          "summary": "Delete user with given ID",
          "tags": [
            "Users"
          ],
          "responses": {
            "200": {
              "description": "User is deleted",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "put": {
          "summary": "Update user with give ID",
          "tags": [
            "Users"
          ],
          "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "User with new values of properties",
              "schema": {
                "$ref": "#/definitions/updateUser"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User is updated",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "url": {
            "type": "number"
          },
          "techs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Repository": {
      "required": [
        "title",
        "url",
        "techs"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "techs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RepositorySucess": {
      "required": [
        "_id",
        "title",
        "url",
        "techs",
        "likes"
      ],
      "properties": {
        "_id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "techs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "likes": {
          "type": "number"
        }
      }
    },
    "updateUser": {
      "required": [
        "name",
        "companies"
      ],
      "properties": {
        "isPublic": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "books": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              }
            }
          }
        },
        "companies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Repositories": {
      "type": "object",
      "$ref": "#/definitions/Repository"
    }
  }
}